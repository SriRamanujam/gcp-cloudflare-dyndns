name: PR

on:
  pull-request:
    paths-ignore:
      - 'README.rst'
      - '.gitignore'
      - '.dockerignore'
      - 'Dockerfile'
      - 'LICENSE'
    branches:
      - "main"

jobs:
  test:
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y ${{ matrix.bootstrap-args }}

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        run: poetry install

      - name: Install pytest plugin
        run: poetry run pip install pytest-github-actions-annotate-failures

      - name: Run pytest
        run: poetry run python -m pytest -p no:sugar -q tests/
